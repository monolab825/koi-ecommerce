generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String
  password String
  role     Role

  cart    Cart[]
  address Address[]
  reviews Review[]
  orders  Order[]

  @@map("users")
}

model Category {
  id   String @id @default(cuid())
  name String

  products Product[]

  @@map("categories")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  image       String?
  video       String?
  price       Decimal  @db.Decimal(10, 2)
  stock       Int
  description String   @db.Text
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])

  carts   Cart[]
  reviews Review[]
  orders  Order[]

  @@map("products")
}

model Cart {
  id        String     @id @default(cuid())
  productId String
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  total     Decimal    @db.Decimal(10, 2)
  quantity  Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  expiresAt DateTime
  product   Product    @relation(fields: [productId], references: [id])

  @@map("carts")
}

model Address {
  id         String @id @default(cuid())
  phone      String
  city       String
  postalCode String
  province   String
  street     String
  userId     String
  user       User   @relation(fields: [userId], references: [id])
  checkouts  Checkout[]

  @@map("addresses")
}

model Order {
  id         String    @id @default(cuid())
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  total      Decimal   @db.Decimal(10, 2)
  quantity   Int
  shippingId String
  shipping   Shipping  @relation(fields: [shippingId], references: [id])
  products   Product[]
  checkoutId String
  checkout   Checkout  @relation(fields: [checkoutId], references: [id])

  @@map("orders")
}

model Shipping {
  id     String  @id @default(cuid())
  city   String
  region String
  fee    Decimal @db.Decimal(10, 2)

  orders Order[]

  @@map("shippings")
}

model Review {
  id        String  @id @default(cuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  rating    Int
  comment   String

  @@map("reviews")
}

model Checkout {
  id       String        @id @default(cuid())
  addressId String
  address  Address       @relation(fields: [addressId], references: [id])
  cart     Json
  total    Decimal       @db.Decimal(10, 2)
  quantity Int
  couponId String?
  coupon   Coupon?       @relation(fields: [couponId], references: [id])
  payments Payment[]
  order    Order[]
  status   PaymentStatus

  @@map("checkouts")
}

model Payment {
  id         String        @id @default(cuid())
  checkoutId String
  checkout   Checkout      @relation(fields: [checkoutId], references: [id])
  total      Decimal
  quantity   Int
  status     PaymentStatus

  @@map("payments")
}

model Coupon {
  id           String      @id @default(cuid())
  code         String
  minimumPrice Decimal?    @db.Decimal(10, 2)
  decimalValue Decimal?    @db.Decimal(10, 2)
  percentValue Decimal?    @db.Decimal(5, 2)
  expiration   DateTime
  discountType DiscountType

  checkouts    Checkout[]

  @@map("coupons")
}


model Carousel {
  id    String  @id @default(cuid())
  image String?
  title String?
  color String? @default("white")
}

enum Role {
  USER
  ADMIN
}

enum PaymentStatus {
  PAID
  UNPAID
}

enum DiscountType {
  DECIMAL
  PERCENT
}